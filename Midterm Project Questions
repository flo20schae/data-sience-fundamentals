Task 2:
1. Which packages are available for ML? Describe the pros and cons and document the availability
Scikit-learn: 
Pros:
•	simple and consistent API, easy to use.
•	wide range of algorithms for different machine learning tasks, such as classification, regression, clustering, and dimensionality reduction.
•	easy to find help and support.
•	open-source software and free to use.
Cons:
•	not as scalable or flexible as some other machine learning libraries, making it less suitable for large datasets or complex models.
•	limited support for deep learning
Availability:
•	available for download from the project's website or can be installed using Python's package manager, pip.
•	The library is compatible with Python 2.7 and 3.5 or later and can be used on Windows, Mac, and Linux.
•	open-source software and can be modified and distributed under the BSD license.

TensorFlow:
Pros:
•	wide range of tools and APIs for building and training machine learning models, including neural networks and deep learning models.
•	Library is highly scalable and can handle large datasets and distributed computing environments.
•	easy to find help and support.
•	supports a wide range of platforms and devices, including GPUs and TPUs.
Cons:
•	can be complex and difficult to use for beginners.
•	library is not as flexible or customizable as some other machine learning libraries, which may limit the ability of advanced users to implement complex models or algorithms.
•	can be resource-intensive, which may be a drawback for users with limited computing resources or working with large datasets.
Availability:
•	is freely available and can be downloaded from the project's website or installed using Python's package manager, pip.
•	The library is compatible with Python 3.5 or later and can be used on Windows, Mac, and Linux.
•	TensorFlow is open-source software and can be modified and distributed under the Apache License 2.0. The latest version of TensorFlow can be found on its official website or on GitHub.
Keras
Pros:
•	simple and user-friendly API that makes it easy to build and train deep learning models.
•	Library supports a wide range of neural network architectures and layers, including convolutional neural networks (CNNs), recurrent neural networks (RNNs), and transformers.
•	can be used with different backends, including TensorFlow, Microsoft Cognitive Toolkit (CNTK), and Theano.
•	easy to find help and support.
Cons:
•	less flexible and customizable than some other deep learning libraries, which may limit the ability of advanced users to implement complex models or algorithms.
•	Library is primarily focused on deep learning and may not be the best choice for users who need to work with other machine learning tasks, such as regression or clustering.
•	may be slower than some other deep learning libraries when working with large datasets or complex models.
Availability:
•	freely available and can be downloaded from the project's website or installed using Python's package manager, pip.
•	The library is compatible with Python 3.6 or later and can be used on Windows, Mac, and Linux.
•	Keras is open-source software and can be modified and distributed under the MIT license. The latest version of Keras can be found on its official website or on GitHub.

2. What is Chembl? How do you access it?
•	database of bioactive molecules with drug-like properties, their biological targets, and the drugs that interact with them. 
•	maintained by the European Bioinformatics Institute (EBI) 
•	contains information on over 2 million compounds and 15,000 protein targets. 
•	valuable resource for drug discovery and development, as well as for understanding the mechanisms of action of existing drugs.

•	It can be accessed through its web interface, which allows users to search for compounds, targets, and drugs of interest, as well as to browse and download data. 
•	The data can also be accessed programmatically through its application programming interface (API), which allows for more advanced queries and automated data retrieval. 


3. What is machine learning, and how does it differ from traditional programming?
•	Machine learning is a type of artificial intelligence that enables computers to learn from data and make predictions or decisions without being explicitly programmed. 
•	The difference between ML and traditional programming is that, in machine learning, the computer learns to make predictions or decisions based on patterns it learns from data. Machine learning models are trained on a dataset, and the goal is to generalize to new, unseen data. 
•	In traditional programming, a programmer writes explicit instructions for the computer to follow. 
•	The key difference between traditional programming and machine learning is that in machine learning, the computer is not explicitly programmed for a specific task, but rather learns from data to perform the task. 

4. What are the key concepts and techniques in machine learning?
•	supervised learning, unsupervised learning, deep learning, reinforcement learning, and feature engineering. 

•	Supervised learning involves training a model on labeled data to make predictions, while unsupervised learning involves identifying patterns in unlabeled data. 
•	Deep learning uses neural networks to learn complex patterns, while reinforcement learning trains agents to interact with an environment to achieve a goal. 
•	Feature engineering involves selecting or creating relevant features to improve model performance.

5. What are the different types of machine learning algorithms?
•	supervised, unsupervised, semi-supervised, reinforcement learning, and deep learning algorithms. 
Each type has its own strengths and is suited for different tasks and types of data. The choice of algorithm depends on the specific problem and available data.

6. What are the common applications of machine learning?
It has numerous applications in different fields such as image and speech recognition, natural language processing, fraud detection, recommendation systems, predictive maintenance, healthcare, finance, and autonomous vehicles.

7. How do you evaluate the performance of a machine learning model?
•	accuracy, precision and recall, F1 score, confusion matrix, cross-validation, and ROC curve. 
•	Choosing the appropriate evaluation metric depends on the task and nature of the data. Improving model performance may involve adjusting parameters, using different feature selection techniques, and selecting a more suitable model.

8. How do you prepare data for use in a machine learning model?
•	cleaning, integrating, selecting relevant features, scaling, splitting the dataset, and sometimes augmenting data. 
•	A well-prepared dataset can help ensure the accuracy and effectiveness of the model.

9. What are some common challenges in machine learning, and how can they be addressed?
•	overfitting, underfitting, bias, variance, noisy data, and lack of interpretability. 
•	Techniques such as regularization, ensemble methods, and preprocessing can help address these challenges, along with proper algorithm and hyperparameter selection, careful dataset consideration, and ongoing monitoring and refinement of the model's performance.

10.What are some resources and tools available to help you learn and practice machine learning?
•	online courses, books, online communities, libraries and frameworks, online competitions, publicly available datasets, online tutorials, and blogs. 
•	These resources can provide individuals with the knowledge and practical experience needed to become proficient in machine learning.

Task 3
1. What is in the training set, how big is it?
  molecule_chembl_id, standard_value, standard_units, target_chembl_id, smiles
  179827 entries x 5 columns
  
2. What modifications do you need to do to the data set to perform the tutorial.
  IC50 values --> pIC50 values
  Incorporation of target ID 
  Drop unimportant columns
  
3. What is a test set? Any other types of set?
A test set is a subset of data used to evaluate the performance of a trained machine learning model. 
Other types of sets used in machine learning include training, validation, cross-validation, development, and unlabeled sets.

4. Before starting describe with 1-2 sentences, in your own words, what is done in each 
of the cells.
--> see in "Midterm_project_with_documentation"
